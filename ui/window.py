from PySide6.QtWidgets import (
    QApplication, QMainWindow, QWidget, QPushButton, QLabel,
    QVBoxLayout, QHBoxLayout, QScrollArea, QLineEdit, QComboBox
)
from PySide6.QtCore import Qt, QSize
from PySide6.QtGui import QPixmap
from .widgets import MicrophoneSelector
from PySide6.QtCore import Signal
import sounddevice as sd
from ui.signals import signals


class ScaledPixmapLabel(QLabel):
    def __init__(self, pixmap, parent=None):
        super().__init__(parent)
        self.original_pixmap = pixmap
        self.setAlignment(Qt.AlignCenter)
        self.setMinimumSize(200, 200)  # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞

    def resizeEvent(self, event):
        if self.original_pixmap:
            scaled = self.original_pixmap.scaled(
                self.size(), Qt.KeepAspectRatio, Qt.SmoothTransformation
            )
            self.setPixmap(scaled)
        super().resizeEvent(event)


class LuxUI(QMainWindow):

    microphone_selected = Signal(int)

    def __init__(self):
        super().__init__()
        self.signals = signals
        self.setWindowTitle("Lux Assistant")
        self.resize(1300, 750)

        self.signals.user_message.connect(lambda msg: self.add_message(msg, sender="user"))
        self.signals.ai_message.connect(lambda msg: self.add_message(msg, sender="ai"))
        self.signals.system_message.connect(lambda msg: self.add_message(msg, sender="system"))

        # ===== –õ–µ–≤–æ–µ –º–µ–Ω—é =====
        left_menu = QVBoxLayout()
        btn_plugins = QPushButton("–ü–õ–ê–ì–ò–ù–´")
        btn_dummy = QPushButton("–ü–£–°–¢–´–®–ö–ê")

        for btn in (btn_plugins, btn_dummy):
            btn.setFixedHeight(45)
            btn.setStyleSheet(self.side_button_style())

        left_menu.addWidget(btn_plugins)
        left_menu.addWidget(btn_dummy)
        left_menu.addStretch()

        left_menu_widget = QWidget()
        left_menu_widget.setLayout(left_menu)
        left_menu_widget.setFixedWidth(150)
        left_menu_widget.setStyleSheet("background-color: #0D0D0D;")

        # ===== –ß–∞—Ç =====
        chat_layout = QVBoxLayout()

        self.chat_area = QScrollArea()
        self.chat_area.setWidgetResizable(True)
        self.chat_content = QWidget()
        self.chat_content_layout = QVBoxLayout(self.chat_content)
        self.chat_content_layout.addStretch()
        self.chat_area.setWidget(self.chat_content)

        # –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –∫–Ω–æ–ø–∫–∏
        input_layout = QHBoxLayout()  # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞—ë–º layout

        self.input_field = QLineEdit()
        self.input_field.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        self.input_field.setFixedHeight(50)
        self.input_field.setStyleSheet(self.input_style())

        self.send_button = QPushButton("‚û§")
        self.send_button.setFixedSize(50, 50)
        self.send_button.setStyleSheet(self.round_button_style("#FFD700"))

        self.mic_button = QPushButton("üé§")
        self.mic_button.setFixedSize(50, 50)
        self.mic_button.setStyleSheet(self.round_button_style("#FFD700"))

        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã –≤ input_layout
        input_layout.addWidget(self.input_field)
        input_layout.addWidget(self.send_button)
        input_layout.addWidget(self.mic_button)

        # –°–æ–∑–¥–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–≤ –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏
        self.mic_selector = QComboBox()
        self.mic_selector.setFixedHeight(50)
        self.mic_selector.setFixedWidth(180)
        self.mic_selector.setStyleSheet("""
            QComboBox {
                background-color: #1A1A1A;
                color: white;
                border: 2px solid #FFD700;
                border-radius: 10px;
                padding-left: 8px;
                font-size: 14px;
            }
        """)

        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–≤
        self.update_mic_list()

        # –°–≤—è–∑—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Å —Å–∏–≥–Ω–∞–ª–æ–º –∫–ª–∞—Å—Å–∞
        self.mic_selector.currentIndexChanged.connect(self.microphone_selected.emit)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–≤ –≤ layout
        input_layout.addWidget(self.mic_selector)

        # –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç –∏ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω—ã–π —á–∞—Ç–æ–≤—ã–π layout
        chat_layout.addWidget(self.chat_area)
        chat_layout.addLayout(input_layout)

        chat_widget = QWidget()
        chat_widget.setLayout(chat_layout)

        # ===== 3D –º–æ–¥–µ–ª—å (–∑–∞–≥–ª—É—à–∫–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ —Ä–∞–º–∫–æ–π) =====
        pixmap = QPixmap("aiease_1753106626225.jpg")
        self.view3d_label = ScaledPixmapLabel(pixmap)

        # –û–±–µ—Ä–Ω–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ä–∞–º–∫–æ–π
        view3d_container = QWidget()
        view3d_container.setStyleSheet("""
            background-color: #111111;
            border: 3px solid #FFD700;
            border-radius: 10px;
        """)
        container_layout = QVBoxLayout(view3d_container)
        container_layout.setContentsMargins(8, 8, 8, 8)
        container_layout.addWidget(self.view3d_label)

        # ===== –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞ =====
        main_layout = QHBoxLayout()
        main_layout.addWidget(left_menu_widget)  # —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
        main_layout.addWidget(chat_widget, 3.5)
        main_layout.addWidget(view3d_container, 2.5)

        container = QWidget()
        container.setLayout(main_layout)
        container.setStyleSheet(self.main_style())
        self.setCentralWidget(container)

    def update_mic_list(self):
        import sounddevice as sd
        self.mic_selector.clear()
        devices = sd.query_devices()
        for i, dev in enumerate(devices):
            if dev['max_input_channels'] > 0:
                self.mic_selector.addItem(f"{i}: {dev['name']}", i)

    def add_message(self, text, sender="system"):
        # –°–æ–∑–¥–∞–µ–º QLabel —Å —Ç–µ–∫—Å—Ç–æ–º
        label = QLabel(text)
        label.setWordWrap(True)
        label.setTextInteractionFlags(Qt.TextSelectableByMouse)  # —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–¥–µ–ª–∏—Ç—å —Ç–µ–∫—Å—Ç
        label.setStyleSheet("font-size: 16px;")

        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
        container = QWidget()
        layout = QHBoxLayout(container)
        layout.setContentsMargins(10, 5, 10, 5)  # –æ—Ç—Å—Ç—É–ø—ã –≤–æ–∫—Ä—É–≥ —Ç–µ–∫—Å—Ç–∞
        layout.setSpacing(0)

        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ sender
        if sender == "user":
            label.setStyleSheet("""
                background-color: #555555;
                color: white;
                padding: 8px 12px;
                border-radius: 12px;
                font-size: 16px;
            """)
            layout.addWidget(label, 0, Qt.AlignLeft)
            layout.addStretch()  # —á—Ç–æ–±—ã –±–ª–æ–∫ –ø—Ä–∏–∂–∏–º–∞–ª—Å—è –∫ –ª–µ–≤–æ–º—É –∫—Ä–∞—é

        elif sender == "ai":
            label.setStyleSheet("""
                background-color: #333333;
                color: #FFD700;
                padding: 8px 12px;
                border-radius: 12px;
                font-size: 16px;
            """)
            layout.addStretch()  # —á—Ç–æ–±—ã –±–ª–æ–∫ –ø—Ä–∏–∂–∏–º–∞–ª—Å—è –∫ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
            layout.addWidget(label, 0, Qt.AlignRight)

        else:  # system –∏–ª–∏ –¥—Ä—É–≥–∏–µ
            label.setStyleSheet("""
                color: #AAAAAA;
                font-style: italic;
                font-size: 14px;
                padding: 4px 6px;
            """)
            layout.addWidget(label, 0, Qt.AlignCenter)

        # –í—Å—Ç–∞–≤–ª—è–µ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout –ø–µ—Ä–µ–¥ stretch, —á—Ç–æ–±—ã —Å–æ–æ–±—â–µ–Ω–∏—è —à–ª–∏ —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑
        self.chat_content_layout.insertWidget(self.chat_content_layout.count() - 1, container)

    def main_style(self):
        return """
        QWidget {
            background-color: #0A0A0A;
            color: white;
            font-size: 14px;
        }
        QScrollArea {
            background: transparent;
            border: none;
        }
        """

    def side_button_style(self):
        return """
        QPushButton {
            background-color: #1A1A1A;
            border: 2px solid #FFD700;
            color: white;
            border-radius: 8px;
            font-size: 14px;
            font-weight: bold;
        }
        QPushButton:hover {
            background-color: #FFD700;
            color: black;
        }
        """

    def input_style(self):
        return """
        QLineEdit {
            background-color: #1A1A1A;
            border: 2px solid #FFD700;
            border-radius: 10px;
            padding-left: 10px;
            color: white;
            font-size: 16px;
        }
        """

    def round_button_style(self, color):
        return f"""
        QPushButton {{
            background-color: {color};
            border: none;
            border-radius: 25px;
            color: black;
            font-weight: bold;
            font-size: 18px;
        }}
        QPushButton:hover {{
            background-color: white;
            color: {color};
        }}
        """

import asyncio
from PySide6.QtWidgets import QApplication

class AsyncApp:
    def __init__(self):
        self.app = QApplication([])
        self.main_window = LuxUI()
        self.main_window.show()
        
    async def run(self):
        # –ó–∞–ø—É—Å–∫–∞–µ–º Qt event loop –≤–º–µ—Å—Ç–µ —Å asyncio
        while True:
            self.app.processEvents()
            await asyncio.sleep(0.01)

if __name__ == "__main__":
    app = QApplication([])
    window = LuxUI()
    window.show()
    app.exec()